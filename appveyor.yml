branches:
  except:
    - /travis/
    - /github-actions/
    - /doozer/
skip_tags: true
shallow_clone: true

#cache:
#  - C:\strawberry
#  - C:\Perl

environment:
  matrix:
#    - perl: cygwinperl
#    - perl: activeperl
    - perl: strawberryperl

## Try the pause hack
#init:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

init:
  ps: |
    if($env:perl -eq "cygwinperl"){
      (New-Object Net.WebClient).DownloadFile('https://cygwin.com/setup-x86_64.exe', 'C:\cygwin64\setup-x86_64.exe')
    }

install:
  - if not %perl%==cygwinperl perl -v
  - if %perl%==strawberryperl ( if not exist "C:\strawberry" cinst strawberryperl )
  - if %perl%==strawberryperl set PATH=C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%PATH%
#  - if %perl%==strawberryperl dir "C:\strawberry" /s
  - if %perl%==strawberryperl cpanm --verbose https://github.com/eserte/perl-tk.git@gh-87
#  - if %perl%==cygwinperl c:\cygwin\bin\sh -c "/usr/bin/perl -v"
#  - if %perl%==cygwinperl c:\cygwin64\setup-x86_64.exe -q --remove-packages=perl,perl_base,perl-XML-Parser,perl-WWW-RobotRules,perl-Unicode-Normalize,perl-TermReadKey,perl-LWP-MediaTypes,perl-HTTP-Negotiate,perl-HTTP-Date,perl-Encode-Locale
#  - if %perl%==cygwinperl c:\cygwin64\setup-x86_64.exe -q --remove-packages=perl,perl_base,perl-XML-Parser,perl-WWW-RobotRules,perl-Unicode-Normalize,perl-TermReadKey,perl-LWP-MediaTypes,perl-HTTP-Negotiate,perl-HTTP-Date,perl-Encode-Locale
#  - if %perl%==cygwinperl c:\cygwin64\setup-x86_64.exe -q --packages=perl
#,perl-IPC-Run
#  - if %perl%==cygwinperl c:\cygwin64\setup-x86_64.exe -q --packages=wget
#  - if %perl%==cygwinperl c:\cygwin64\bin\sh -c "cd /tmp && curl -O https://cygwin.mirror.constant.com/x86_64/release/perl/perl_base/perl_base-5.32.1-2.tar.zst && curl -O https://cygwin.mirror.constant.com/x86_64/release/perl/perl-5.32.1-2.tar.zst && /usr/bin/zstd -dc perl_base-5.32.1-2.tar.zst | /usr/bin/tar -xv -C / && /usr/bin/zstd -dc perl-5.32.1-2.tar.zst | /usr/bin/tar -xv -C /"
#  - if %perl%==cygwinperl c:\cygwin64\bin\sh -c "cd /tmp && curl -O https://cygwin.mirror.constant.com/x86_64/release/perl/perl_base/perl_base-5.30.3-1.tar.xz && curl -O https://cygwin.mirror.constant.com/x86_64/release/perl/perl-5.30.3-1.tar.xz && /usr/bin/tar -xvf perl_base-5.30.3-1.tar.xz -C / && /usr/bin/tar -xvf perl-5.30.3-1.tar.xz -C /"
#  - if %perl%==cygwinperl c:\cygwin64\bin\sh -c "/usr/bin/cygcheck -c perl perl_base"
#  - if %perl%==cygwinperl c:\cygwin64\setup-x86_64.exe -R c:\cygwin64-2 -q --packages=perl,perl-IPC-Run
#  - if %perl%==cygwinperl c:\cygwin64-2\bin\sh -c "/usr/bin/perl -v"
#  - if %perl%==cygwinperl c:\cygwin64-2\bin\sh -c "/usr/bin/perl -V"
#  - if %perl%==cygwinperl       c:\cygwin\bin\sh -c "PATH=/usr/bin:/bin; (cd /tmp && git clone https://github.com/eserte/travis-helper-cpan-pm.git && ./travis-helper-cpan-pm/travis-helper-cpan-pm --no-sudo)"

# $env:PATH="C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%env:PATH"
#  - if not exist "C:\strawberry" cinst strawberryperl
###  - ps: Start-FileDownload http://strawberryperl.com/download/5.22.1.2/strawberry-perl-5.22.1.2-64bit.msi
###  - msiexec /i "C:\projects\sources\strawberry-perl-5.22.1.2-64bit.msi" /qn INSTALLDIR="C:\projects\perl"
#  - set PATH=C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%PATH%
##  - if not exist "C:\Perl" cinst activeperl
##  - set PATH=C:\Perl\bin;%PATH%
#  - ppm install App-cpanminus MinGW
#  - ppm install Tk IPC-Run dmake
#  - ppm install dmake
##  - if not exist "C:\strawberry\cpan\prefs\.git" git clone git://github.com/eserte/srezic-cpan-distroprefs C:\strawberry\cpan\prefs
##  - cd C:\strawberry\cpan\prefs
##  - git pull
##  - cpan DB_File::Lock
##  - cpanm Tk
##  - cpanm --verbose Tk::Pod
##  - cpanm --verbose Inline::C
#  - set HARNESS_IS_VERBOSE=0
#  - cpanm --verbose Test::Trap
##  - set USE_MAKE=nmake
##  - set USE_MAKE=dmake
##  - cd C:\projects\%APPVEYOR_PROJECT_NAME%
##  - cpanm --quiet --notest "App::cpm~>=0.293" LWP::Protocol::https
##  - perl Makefile.PL
##  - mymeta-cpanfile > cpanfile
### currently cpm always fails, so it's safe to output the fail log always
##  - set HOME=%HOMEDRIVE%%HOMEPATH%
##  - cpm install -g -v & type %HOME%\.perl-cpm\build.log
##  - how to fail on windows?

build_script:
  - perl -E "say q{hello, world}"
#  - uname -m
#  - "dir C:\\"
#  - set HARNESS_OPTIONS=j4:c
#  - if %perl%==cygwinperl c:\cygwin\bin\sh -c "PATH=/usr/bin:/bin; cpan LWP::Protocol::https && lwp-download https://raw.github.com/Perl/perl5/blead/dist/PathTools/t/cwd_enoent.t cwd_enoent.t"
#  - if %perl%==cygwinperl c:\cygwin\bin\sh -c "PATH=/usr/bin:/bin; perl t/cygwin_mkdir.t"
#  - git clone git://github.com/eserte/org-daemon.git
#  - cd org-daemon
#  - cpanm --installdeps .
#  - if     %perl%==cygwinperl c:\cygwin\bin\sh -c "echo $PATH; which perl; ls -al /usr/bin"
#  - if     %perl%==cygwinperl c:\cygwin\bin\sh -c "PATH=/usr/bin:/bin; perl Build.PL && perl Build && perl Build test"
#  - if not %perl%==cygwinperl ( perl Build.PL && perl Build && perl Build test )
#  - if     %perl%==cygwinperl perl build.pl cygwin
#  - if not %perl%==cygwinperl perl build.pl native
#  - perl Makefile.PL
#  - dmake all test
#  - perl -MDB_File::Lock -e "warn $DB_File::Lock::VERSION"
#  - "%USE_MAKE% dmake-test SOMETHING=nesto PERL=perl"
#  - "%USE_MAKE% test"
#  - echo "hurra"
#  - prove -v t\locale.t
#  - lwp-download http://eserte.bbbike.de/tmp/Msg-1.13.tar.gz
#  - tar xfvz Msg-1.13.tar.gz
#  - cd Msg-1.13
#  - perl Makefile.PL
#  - gmake all test

#  - if     %perl%==cygwinperl c:\cygwin\bin\sh -c "PATH=/usr/bin:/bin; perl -V"
#  - if     %perl%==cygwinperl c:\cygwin\bin\sh -c "PATH=/usr/bin:/bin; perl '-MIPC::Run 99999999'"
#  - if not %perl%==cygwinperl perl -V
#  - if not %perl%==cygwinperl perl "-MIPC::Run 99999999"

#  - git clone https://github.com/eserte/Doit.git && cd Doit && git checkout XXX-github-actions && perl Build.PL && perl Build
##  - cd .. && perl -Mblib=Doit scripts\fc.pl
#  - cd .. && perl -Mblib=Doit scripts\open2.pl

#  - perl scripts\windows-signals.pl

#on_failure:
#  - type C:\ProgramData\chocolatey\logs\chocolatey.log
