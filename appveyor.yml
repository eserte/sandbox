branches:
  except:
    - /travis/
skip_tags: true
shallow_clone: true

#cache:
#  - C:\strawberry
#  - C:\Perl

environment:
  matrix:
    - perl: cygwinperl
    - perl: activeperl
    - perl: strawberryperl

install:
  - ps: >-
      If ($env:perl -eq "strawberryperl") {
        If (!(test-path -path "C:\strawberry")) {
          cinst strawberryperl
        }
        refreshenv
      }
  - perl -V
# $env:PATH="C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%env:PATH"
#  - if not exist "C:\strawberry" cinst strawberryperl
###  - ps: Start-FileDownload http://strawberryperl.com/download/5.22.1.2/strawberry-perl-5.22.1.2-64bit.msi
###  - msiexec /i "C:\projects\sources\strawberry-perl-5.22.1.2-64bit.msi" /qn INSTALLDIR="C:\projects\perl"
#  - set PATH=C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%PATH%
##  - if not exist "C:\Perl" cinst activeperl
##  - set PATH=C:\Perl\bin;%PATH%
##  - ppm install App-cpanminus MinGW
##  - if not exist "C:\strawberry\cpan\prefs\.git" git clone git://github.com/eserte/srezic-cpan-distroprefs C:\strawberry\cpan\prefs
##  - cd C:\strawberry\cpan\prefs
##  - git pull
##  - cpan DB_File::Lock
##  - cpanm Tk
##  - cpanm --verbose Tk::Pod
##  - cpanm --verbose Inline::C
#  - set HARNESS_IS_VERBOSE=0
#  - cpanm --verbose Test::Trap
##  - set USE_MAKE=nmake
##  - set USE_MAKE=dmake
##  - cd C:\projects\%APPVEYOR_PROJECT_NAME%
###  - cpanm --installdeps .
##  - cpanm --quiet --notest "App::cpm~>=0.293" LWP::Protocol::https
##  - perl Makefile.PL
##  - mymeta-cpanfile > cpanfile
### currently cpm always fails, so it's safe to output the fail log always
##  - set HOME=%HOMEDRIVE%%HOMEPATH%
##  - cpm install -g -v & type %HOME%\.perl-cpm\build.log
##  - how to fail on windows?

build_script:
  - ps: >-
      If ($env:perl -eq "cygwinperl") {
        c:\cygwin\bin\sh -c 'git clone git://github.com/eserte/Doit.git && cd Doit && perl Build.PL && perl Build && perl Build test' 2>&1 | %{ "$_" }
      } Else {
        git clone git://github.com/eserte/Doit.git
        cd Doit
        $env:HARNESS_OPTIONS="j4:c"
        perl Build.PL
        perl Build
        perl Build test
      }
#  - perl Makefile.PL
#  - perl -MDB_File::Lock -e "warn $DB_File::Lock::VERSION"
#  - "%USE_MAKE% dmake-test SOMETHING=nesto PERL=perl"
#  - "%USE_MAKE% test"
#  - echo "hurra"

on_failure:
  - type C:\ProgramData\chocolatey\logs\chocolatey.log
